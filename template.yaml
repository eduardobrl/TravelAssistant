AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  TravelAssistant

  Sample SAM Template for TravelAssistant

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  TelegramProcessorFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      ImageConfig:
        Command:
          - telegram_app.lambda_handler
      Timeout: 30
      Role: arn:aws:iam::525636320068:role/travel_assistant_lambda
      Environment:
        Variables:
          TABLE_NAME: TravelAssistantTable
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: post
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./app
      DockerTag: python3.12-v1

  StreamProcessorFunction:
    Type: AWS::Serverless::Function 
    Properties:
      PackageType: Image
      ImageConfig:
        Command:
          - stream_app.stream_handler
      Timeout: 30
      Role: arn:aws:iam::525636320068:role/travel_assistant_lambda
      Environment:
        Variables:
          TABLE_NAME: TravelAssistantTable
      Architectures:
      - x86_64
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt DynamoDBTable.StreamArn
            BatchSize: 100
            StartingPosition: LATEST
            Enabled: true
            MaximumRetryAttempts: 10
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./app
      DockerTag: python3.12-v1

  DocumentIndexerFunction:
    Type: AWS::Serverless::Function 
    Properties:
      PackageType: Image
      ImageConfig:
        Command:
          - document_indexer_app.lambda_handler
      Timeout: 30
      Role: arn:aws:iam::525636320068:role/travel_assistant_lambda
      Environment:
        Variables:
          TABLE_NAME: TravelAssistantTable
          BUCKET_NAME: travel-assistant-documents
          FILE_PATH: /tmp/
      Architectures:
      - x86_64
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./app
      DockerTag: python3.12-v1

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt DocumentIndexerFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: arn:aws:s3:::travel-assistant-documents

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: TravelAssistantTable
      AttributeDefinitions: 
        - AttributeName: PartitionKey
          AttributeType: S
        - AttributeName: RangeKey
          AttributeType: S
      KeySchema: 
        - AttributeName: PartitionKey
          KeyType: HASH
        - AttributeName: RangeKey
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  TelegramProcessorFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt TelegramProcessorFunction.Arn
  TelegramProcessorFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: arn:aws:iam::525636320068:role/travel_assistant_lambda
